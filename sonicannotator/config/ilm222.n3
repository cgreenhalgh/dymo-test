@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .
@prefix vamp:     <http://purl.org/ontology/vamp/> .
@prefix :         <#> .

:transform_beats a vamp:Transform ;
    vamp:plugin <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-barbeattracker> ;
    vamp:step_size "512"^^xsd:int ; 
    vamp:block_size "1024"^^xsd:int ; 
    vamp:plugin_version """3""" ; 
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "alpha" ] ;
        vamp:value "0.9"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "bpb" ] ;
        vamp:value "4"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "constraintempo" ] ;
        vamp:value "0"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "inputtempo" ] ;
        vamp:value "120"^^xsd:float ;
    ] ;
    vamp:output      <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-barbeattracker_output_beats> .

:transform_qm_key a vamp:Transform ;
    vamp:plugin <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-keydetector> ;
    vamp:step_size "32768"^^xsd:int ; 
    vamp:block_size "32768"^^xsd:int ; 
    vamp:plugin_version """4""" ; 
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "length" ] ;
        vamp:value "10"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "tuning" ] ;
        vamp:value "440"^^xsd:float ;
    ] ;
    vamp:output <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-keydetector_output_key> .

:transform_tempo a vamp:Transform ;
    vamp:plugin <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-tempotracker> ;
    vamp:step_size "512"^^xsd:int ; 
    vamp:block_size "1024"^^xsd:int ; 
    vamp:plugin_version """6""" ; 
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "alpha" ] ;
        vamp:value "0.9"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "constraintempo" ] ;
        vamp:value "0"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "dftype" ] ;
        vamp:value "3"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "inputtempo" ] ;
        vamp:value "120"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "method" ] ;
        vamp:value "1"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "whiten" ] ;
        vamp:value "0"^^xsd:float ;
    ] ;
    vamp:output <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-tempotracker_output_tempo> .

:transform_onsets a vamp:Transform ;
    vamp:plugin <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-onsetdetector> ;
    vamp:step_size "512"^^xsd:int ; 
    vamp:block_size "1024"^^xsd:int ; 
    vamp:plugin_version """3""" ; 
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "dftype" ] ;
        vamp:value "3"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "sensitivity" ] ;
        vamp:value "50"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "whiten" ] ;
        vamp:value "0"^^xsd:float ;
    ] ;
    vamp:output <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-onsetdetector_output_onsets> .

:transform_tonalchange a vamp:Transform ;
    vamp:plugin <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-tonalchange> ;
    vamp:step_size "2048"^^xsd:int ; 
    vamp:block_size "16384"^^xsd:int ; 
    vamp:plugin_version """2""" ; 
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "maxpitch" ] ;
        vamp:value "108"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "minpitch" ] ;
        vamp:value "32"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "smoothingwidth" ] ;
        vamp:value "5"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "tuning" ] ;
        vamp:value "440"^^xsd:float ;
    ] ;
    vamp:output <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-tonalchange_output_changepositions> .

:transform_qm_mfcc a vamp:Transform ;
    vamp:plugin <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-mfcc> ;
    vamp:step_size "2048"^^xsd:int ; 
    vamp:block_size "1024"^^xsd:int ; 
    vamp:plugin_version """1""" ; 
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "logpower" ] ;
        vamp:value "1"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "nceps" ] ;
        vamp:value "20"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "wantc0" ] ;
        vamp:value "1"^^xsd:float ;
    ] ;
    vamp:output <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-mfcc_output_coefficients> .

:transform_segmenter a vamp:Transform ;
    vamp:plugin <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-segmenter> ;
    vamp:step_size "8820"^^xsd:int ; 
    vamp:block_size "26460"^^xsd:int ; 
    vamp:plugin_version """3""" ; 
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "featureType" ] ;
        vamp:value "1"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "nSegmentTypes" ] ;
        vamp:value "10"^^xsd:float ;
    ] ;
    vamp:parameter_binding [
        vamp:parameter [ vamp:identifier "neighbourhoodLimit" ] ;
        vamp:value "4"^^xsd:float ;
    ] ;
    vamp:output <http://vamp-plugins.org/rdf/plugins/qm-vamp-plugins#qm-segmenter_output_segmentation> .
